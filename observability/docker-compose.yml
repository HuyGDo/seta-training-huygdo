version: "3.8"

networks:
  monitoring:
    driver: bridge

services:
  seta-service:
    build: ../seta-service
    ports:
      - "8080:8080"
    volumes:
      - ../seta-service/logs:/app/logs
    environment:
      # adjust user/db name as needed for your local Postgres
      - DATABASE_URL=postgres://huygdo@host.docker.internal:5432/seta_service_db?sslmode=disable

      - USER_SERVICE_URL=http://user-service:4000/users

      - USER_IMPORT_WORKERS=10

    # ensures host.docker.internal works on Linux (Docker 20.10+)
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - monitoring

  user-service:
    build: ../user-service
    ports:
      - "4000:4000"
    volumes:
      - ../user-service/logs:/app/logs
    environment:
      # adjust user/db name as needed for your local Postgres
      - NODE_ENV=development
      - ACCESS_TOKEN_SECRET=IDontKnowHowButTheyFoundMe
      - REFRESH_TOKEN_SECRET=ArcticMonkeys
      - DB_HOST=host.docker.internal
      - DB_USER=huygdo
      - DB_PASS=
      - DB_NAME=user_service_db
      - DB_DIALECT=postgres
      - HOST=0.0.0.0
    # ensures host.docker.internal works on Linux (Docker 20.10+)
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.47.2
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - monitoring

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    working_dir: /loki
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      # shares the host logs dir with promtail
      - ../seta-service/logs:/var/log
      - ./promtail-config.yml:/etc/promtail/config.yaml:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:10.1.5
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ./provisioning:/etc/grafana/provisioning/dashboards:ro

    depends_on:
      - loki
    networks:
      - monitoring

volumes:
  loki-data:
